////////////////////////////////////////////////////////////////////////
// XOR2_TR.vp  
//;
//; # Any Line that starts with a slash slash semi-colon is perl
//; # So we can follow our good habits from before
//; use strict ;                   # Use a strict interpretation
//; use warnings FATAL=>qw(all);   # Turn warnings into errors
//; use diagnostics ;              # Print helpful info, for errors
//;

module `mname`
  ( input  wire A,
    input  wire B,
    output wire Z );

   supply0 	 Vss;
   supply1 	 Vcc;
   wire 	 n0, n1, n2;
   wire          Y;
   wire A_, B_;
   
   // Z = (A^B);

   // Your design here
   //INV_TR M0(.A(A), .Z(n0));
   rnmos M30(     A_,        Vss,          A);
   rpmos M31(     B_,        Vcc,          A);

   //INV_TR M1(.A(B), .Z(n1));
   rnmos M20(     n1,        Vss,          B);
   rpmos M21(     n1,        Vcc,          B);

   //OAI22_TR M2(.A(A), .B(B_), .C(A_), .D(B), .Z(Z));
   rpmos M10( n0, Vcc, A);
   rpmos M11( n1, Vcc, A_);
   rpmos M12( Z, n0, B_);
   rpmos M13( Z, n1, B);

   rnmos M00( Z, n2, A);
   rnmos M01( Z, n2, B_);
   rnmos M02( n2, Vss, A_);
   rnmos M03( n2, Vss, B);

   
endmodule
